services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    healthcheck:
      test:
        ["CMD-SHELL", "curl -fsS http://localhost:3000/ > /dev/null || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 6
    depends_on:
      user-service:
        condition: service_healthy
      collaboration-service:
        condition: service_healthy

  # User service
  user-service:
    build:
      context: ./backend/user-service
    env_file:
      - .env
    ports:
      - "${USER_PORT:-8004}:${USER_PORT:-8004}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ENV=${ENV:-PROD}
      - USER_PORT=${USER_PORT:-8004}
      - USER_DB_LOCAL_URI=${USER_DB_LOCAL_URI:-mongodb://mongodb:27017/peerprepUserServiceDB}
      - USER_DB_CLOUD_URI=${USER_DB_CLOUD_URI}
      - DB_LOCAL_URI=${DB_LOCAL_URI:-mongodb://mongodb:27017/peerprep}
      - DB_CLOUD_URI=${DB_CLOUD_URI}
      - JWT_SECRET=${JWT_SECRET}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsS http://localhost:${USER_PORT:-8004}/health > /dev/null || exit 1",
        ]
      interval: 10s
      timeout: 2s
      retries: 6
    depends_on:
      mongodb:
        condition: service_healthy

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: peerprep-rabbitmq
    env_file:
      - .env
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MGMT_PORT:-15672}:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # Matching service
  matching-service:
    build:
      context: ./backend/matching-service
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - MATCHING_PORT=${MATCHING_PORT:-8002}
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672
      - USER_SERVICE_URL=http://user-service:${USER_PORT:-8004}
      - MATCHING_TIMEOUT=${MATCHING_TIMEOUT:-30000}
      - COLLAB_SERVICE_URL=http://collaboration-service:${COLLAB_PORT:-8001}
      - COLLAB_INTERNAL_TOKEN=${COLLAB_INTERNAL_TOKEN}
    ports:
      - "${MATCHING_PORT:-8002}:${MATCHING_PORT:-8002}"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${MATCHING_PORT:-8002}/health || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
      user-service:
        condition: service_healthy
      collaboration-service:
        condition: service_healthy

  # Collaboration service
  collaboration-service:
    build:
      context: ./backend/collaboration-service
    env_file:
      - .env
    ports:
      - "${COLLAB_PORT:-8001}:${COLLAB_PORT:-8001}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - COLLAB_PORT=${COLLAB_PORT:-8001}
      - JWT_SECRET=${JWT_SECRET}
      - COLLAB_INTERNAL_TOKEN=${COLLAB_INTERNAL_TOKEN}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${COLLAB_PORT:-8001}/health || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    depends_on:
      user-service:
        condition: service_healthy

  # MongoDB database
  mongodb:
    image: mongo:7-jammy
    env_file:
      - .env
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_DATABASE=peerprep
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Question service
  question-service:
    build:
      context: ./backend/question-service
    env_file:
      - .env
    ports:
      - "${QUESTION_PORT:-8003}:${QUESTION_PORT:-8003}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ENV=${ENV:-PROD}
      - QUESTION_PORT=${QUESTION_PORT:-8003}
      - QUESTION_DB_LOCAL_URI=${QUESTION_DB_LOCAL_URI:-mongodb://mongodb:27017/peerprepQuestionServiceDB}
      - QUESTION_DB_CLOUD_URI=${QUESTION_DB_CLOUD_URI}
      - DB_LOCAL_URI=${DB_LOCAL_URI:-mongodb://mongodb:27017/peerprep}
      - DB_CLOUD_URI=${DB_CLOUD_URI}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsS http://localhost:${QUESTION_PORT:-8003}/health > /dev/null || exit 1",
        ]
      interval: 10s
      timeout: 2s
      retries: 6
    depends_on:
      mongodb:
        condition: service_healthy

volumes:
  mongodb_data:
  rabbitmq_data:
